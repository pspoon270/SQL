# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 



CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#First I determined the avg popularity, danceability, and energy by artist and track. 
SELECT
artist_name
,track_name
,avg(popularity)
,avg(danceability)
,avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name



SELECT * FROM BIT_DB.Spotifydata;

/*What is the average danceability by artist and track?*/

select artist_name, track_name, avg(danceability) as AverageDanceability
from BIT_DB.Spotifydata
GROUP BY ARTIST_NAME, TRACK_NAME;

/*Who are the top 10 artists based on popularity?*/

Select artist_name, popularity
from bit_db.Spotifydata
order by popularity desc
limit 10;

What artist released the longest song? 

select artist_name, duration_ms
from bit_db.spotifydata
order by duration_ms desc
limit 1;

or

   SELECT artist_name, MAX(duration_ms)
FROM Spotifydata
LIMIT 1;


/* What's the average danceability for the 10 most popular songs?*/

SELECT AVG(danceability) AS AverageDanceability
FROM BIT_DB.Spotifydata
  ORDER BY popularity DESC
  LIMIT 10;

